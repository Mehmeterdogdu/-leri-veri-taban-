# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'matches.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QTableWidgetItem
import mysql.connector as mc

from dbconnection import cursor, connection

class Ui_Matches(object):
    def add(self):
        try:
            match_date = self.dateTimeEdit.text()

            print(match_date)

            sql = "INSERT INTO matches(home_id, away_id, match_date) VALUES (%s, %s, NOW())"
            value = (combobox_home_team_id, combobox_away_team_id)

            cursor.execute(sql, value)

            connection.commit()
            print("başarıyla eklendi")
            self.display()

        except mc.Error as e:
            print("Bilgi eklenemedi")

    def display(self):
        try:   
   
            sql = "SELECT * FROM  show_fikstür"
            cursor.execute(sql)

            result = cursor.fetchall()

            self.tableWidget.setRowCount(0)

            for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                    self.tableWidget.setItem(row_number,
                                             column_number, QTableWidgetItem(str(data)))

            print("başarıyla gösterildi")

        except mc.Error as e:
            print("Tablo gösterilemedi")


    def search(self):
        try:         
            """
            SET @name = '';
            CALL show_home_name(@name);
            SELECT @name;
            """
            
            teamName = self.cb_team_name.currentText()

            sql = "CALL show_home_name(%s);"
            cursor.execute(sql, (teamName,))
            
            result = cursor.fetchall()
                
            self.tableWidget.setRowCount(0)

            for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, data in enumerate(row_data):
                    self.tableWidget.setItem(row_number,
                                             column_number, QTableWidgetItem(str(data)))

            print("aranan kısımlar başarıyla gösterildi")
            

        except mc.Error as e:
            print("Aranan Bilgi Bulunamadı")
            print(e)



    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(945, 694)
        self.frame = QtWidgets.QFrame(Form)
        self.frame.setGeometry(QtCore.QRect(720, 110, 231, 601))
        self.frame.setStyleSheet("\n"
                                 "background-color: rgb(106, 106, 106);\n"
                                 "")
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.btnAdd = QtWidgets.QPushButton(self.frame)
        self.btnAdd.setGeometry(QtCore.QRect(40, 10, 131, 71))
        self.btnAdd.setStyleSheet("\n"
                                  "QPushButton::hover\n"
                                  "{\n"
                                  "background-color: rgb(0, 0, 139);\n"
                                  "color: rgb(255, 255, 255);\n"
                                  "}\n"
                                  "QPushButton{\n"
                                  "\n"
                                  "background-color: rgb(255, 255, 255);\n"
                                  "font: 81 14pt \"Roboto Slab ExtraBold\";\n"
                                  "border-radius:20px;\n"
                                  "}\n"
                                  "")
        self.btnAdd.setObjectName("btnAdd")
        self.btnAdd.clicked.connect(self.add)


        self.btnDisplay = QtWidgets.QPushButton(self.frame)
        self.btnDisplay.setGeometry(QtCore.QRect(40, 110, 131, 71))
        self.btnDisplay.setStyleSheet("\n"
                                      "QPushButton::hover\n"
                                      "{\n"
                                      "background-color: rgb(0, 0, 139);\n"
                                      "color: rgb(255, 255, 255);\n"
                                      "}\n"
                                      "QPushButton{\n"
                                      "\n"
                                      "background-color: rgb(255, 255, 255);\n"
                                      "font: 81 14pt \"Roboto Slab ExtraBold\";\n"
                                      "border-radius:20px;\n"
                                      "}\n"
                                      "")
        self.btnDisplay.setObjectName("btnDisplay")
        self.btnDisplay.clicked.connect(self.display)


        self.btnSearch = QtWidgets.QPushButton(self.frame)
        self.btnSearch.setGeometry(QtCore.QRect(40, 210, 131, 71))
        self.btnSearch.setStyleSheet("\n"
                                     "QPushButton::hover\n"
                                     "{\n"
                                     "background-color: rgb(0, 0, 139);\n"
                                     "color: rgb(255, 255, 255);\n"
                                     "}\n"
                                     "QPushButton{\n"
                                     "\n"
                                     "background-color: rgb(255, 255, 255);\n"
                                     "font: 81 14pt \"Roboto Slab ExtraBold\";\n"
                                     "border-radius:20px;\n"
                                     "}\n"
                                     "")
        self.btnSearch.setObjectName("btnSearch")
        self.btnSearch.clicked.connect(self.search)


        self.frame_2 = QtWidgets.QFrame(Form)
        self.frame_2.setGeometry(QtCore.QRect(0, 0, 951, 111))
        self.frame_2.setStyleSheet("background-color:rgb(40, 40, 40);")
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.lbl_main = QtWidgets.QLabel(self.frame_2)
        self.lbl_main.setGeometry(QtCore.QRect(280, 30, 321, 51))
        self.lbl_main.setStyleSheet("color: white;")
        self.lbl_main.setObjectName("lbl_main")
        self.frame_3 = QtWidgets.QFrame(Form)
        self.frame_3.setGeometry(QtCore.QRect(0, 110, 721, 331))
        self.frame_3.setStyleSheet("background-color: rgb(197, 197, 197);")
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.lbl_home_team = QtWidgets.QLabel(self.frame_3)
        self.lbl_home_team.setGeometry(QtCore.QRect(110, 40, 151, 31))
        self.lbl_home_team.setStyleSheet(
            "font: 87 12pt \"Roboto Slab Black\";")
        self.lbl_home_team.setObjectName("lbl_home_team")
        self.lbl_away_team = QtWidgets.QLabel(self.frame_3)
        self.lbl_away_team.setGeometry(QtCore.QRect(110, 110, 141, 31))
        self.lbl_away_team.setStyleSheet(
            "font: 87 12pt \"Roboto Slab Black\";")
        self.lbl_away_team.setObjectName("lbl_away_team")
        self.lbl_date = QtWidgets.QLabel(self.frame_3)
        self.lbl_date.setGeometry(QtCore.QRect(110, 170, 141, 31))
        self.lbl_date.setStyleSheet("font: 87 12pt \"Roboto Slab Black\";")
        self.lbl_date.setObjectName("lbl_date")
        self.dateTimeEdit = QtWidgets.QDateTimeEdit(self.frame_3)
        self.dateTimeEdit.setGeometry(QtCore.QRect(280, 170, 301, 31))
        self.dateTimeEdit.setStyleSheet(
            "background-color: rgb(255, 255, 255);")
        self.dateTimeEdit.setObjectName("dateTimeEdit")
        self.lbl_team_name = QtWidgets.QLabel(self.frame_3)
        self.lbl_team_name.setGeometry(QtCore.QRect(110, 230, 141, 31))
        self.lbl_team_name.setStyleSheet(
            "font: 87 12pt \"Roboto Slab Black\";")
        self.lbl_team_name.setObjectName("lbl_team_name")
        self.cb_team_name = QtWidgets.QComboBox(self.frame_3)
        self.cb_team_name.setGeometry(QtCore.QRect(280, 230, 301, 31))
        self.cb_team_name.setStyleSheet(
            "background-color: rgb(255, 255, 255);")
        self.cb_team_name.setObjectName("cb_team_name")
        self.cb_hometeam = QtWidgets.QComboBox(self.frame_3)
        self.cb_hometeam.setGeometry(QtCore.QRect(280, 40, 301, 31))
        self.cb_hometeam.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_hometeam.setObjectName("cb_hometeam")
        self.cb_awayteam = QtWidgets.QComboBox(self.frame_3)
        self.cb_awayteam.setGeometry(QtCore.QRect(280, 110, 301, 31))
        self.cb_awayteam.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.cb_awayteam.setObjectName("cb_awayteam")
        self.tableWidget = QtWidgets.QTableWidget(Form)
        self.tableWidget.setGeometry(QtCore.QRect(0, 440, 721, 261))
        self.tableWidget.setRowCount(0)
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setObjectName("tableWidget")
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.tableWidget.horizontalHeader().setCascadingSectionResizes(False)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

        self.cb_hometeam.currentIndexChanged[int].connect(self.retrieveText)
        self.cb_awayteam.currentIndexChanged[int].connect(self.retrieveText_2)
        self.cb_team_name.currentIndexChanged[int].connect(self.retrieveText_3)
        self.fillComboBox()


    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.btnAdd.setText(_translate("Form", "ADD"))
        self.btnDisplay.setText(_translate("Form", "DISPLAY"))
        self.btnSearch.setText(_translate("Form", "SEARCH"))
        self.lbl_main.setText(_translate(
            "Form", "<html><head/><body><p align=\"center\"><span style=\" font-size:16pt; font-weight:600;\">MATCHES MANAGEMENT</span></p></body></html>"))
        self.lbl_home_team.setText(_translate("Form", "Home Team"))
        self.lbl_away_team.setText(_translate("Form", "Away Team "))
        self.lbl_date.setText(_translate("Form", "Match Date"))
        self.lbl_team_name.setText(_translate("Form", "Team Name"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Form", "Home Team"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Form", "Away Team"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Form", "Match Date"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Form", "Match Id"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Form", "Away Score"))


    def fillComboBox(self):
        teams = self.combobox_teams()
        for key, value in teams.items():
                self.cb_hometeam.addItem(key, value)
                self.cb_awayteam.addItem(key, value)
                self.cb_team_name.addItem(key, value)

    def retrieveText(self, index):
            x = self.cb_hometeam.itemData(index)
            if x is not None:
                global combobox_home_team_id
                combobox_home_team_id = (int(x))

    def retrieveText_2(self, index):
            x = self.cb_awayteam.itemData(index)
            if x is not None:
                global combobox_away_team_id
                combobox_away_team_id = (int(x))

    def retrieveText_3(self, index):
            x = self.cb_team_name.itemData(index)
            if x is not None:
                global combobox_team_name
                combobox_team_name = (int(x)) 

    def combobox_teams(self):
        try:
            content = "SELECT team_id, team_name FROM teams"
            cursor.execute(content)
            result = cursor.fetchall()

            dct = dict(map(reversed, result))
            return dct

        except mc.Error as e:
            print("Error occured")


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Matches()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
